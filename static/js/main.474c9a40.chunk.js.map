{"version":3,"sources":["styles/globalStyles.ts","context/ImageContext.tsx","components/SearchBox.tsx","components/Header.tsx","animations/index.ts","components/ImageCard.tsx","components/Skeleton.tsx","components/ImageGrid.tsx","components/Pagination.tsx","components/Wrapper.tsx","components/Content.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyles","createGlobalStyle","ImageContext","createContext","ImageProvider","children","useState","imageList","setImageList","currentPage","setCurrentPage","totalPages","setTotalPages","isLoading","setLoading","query","useRef","elementRef","searchImages","useCallback","q","a","page","current","fetch","process","encodeURI","resp","json","data","totalHits","hits","scrollIntoView","block","behavior","console","log","useEffect","trim","length","Provider","value","initElementRef","element","prevPage","nextPage","SearchBoxStyled","styled","form","SearchBox","setQuery","prevQuery","setPrevQuery","useContext","onSubmit","e","preventDefault","ref","aria-label","type","onChange","target","title","disabled","size","color","transform","HeaderStyled","header","Header","pulse","keyframes","ImageCardStyled","div","ImageCard","image","isImageLoading","setImageLoading","className","src","previewURL","width","previewWidth","height","previewHeight","alt","tags","onLoad","views","downloads","href","largeImageURL","rel","SkeletonStyled","Skeleton","ImageGridStyled","ImageGrid","Array","map","_","i","id","PaginationStyled","Pagination","onClick","WrapperStyled","Wrapper","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.474c9a40.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  body {\n    background-color: #2B3E50;\n    color: #fff;\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    font-size: 1.6em;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  a {\n    text-decoration: none;\n  }\n  h1 {\n    font-size: 2.6rem;\n    font-weight: 500;\n    margin: 0;\n    text-align: center;\n  }\n  .btn {\n    background-color: #4E3540;\n    border: none;\n    border-radius: 0.4rem;\n    color: #fff;\n    cursor: pointer;\n    display: inline-block;\n    font-family: inherit;\n    font-size: 1.6rem;\n    text-align: center;\n    padding: 0.8rem 1.2rem;\n    &:focus {\n      outline: none;\n    }\n    &:first-child {\n      margin-right: 2rem;\n    }\n    &--secondary {\n      background-color: #c63e12;\n      color: #fff;\n    }\n    &--block {\n      display: block;\n      width: 100%;\n    }\n  }\n`;\n","import {\n\tcreateContext,\n\tReactNode,\n\tuseCallback,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react';\nimport {\n\tHit,\n\tSearchImagesResponse,\n} from '../interfaces/search-images-response.interface';\n\ninterface ImageContextInt {\n\timageList: Hit[];\n\tcurrentPage: number;\n\ttotalPages: number;\n\tisLoading: boolean;\n\tsearchImages(q: string): void;\n\tinitElementRef(element: HTMLFormElement): void;\n\tprevPage(): void;\n\tnextPage(): void;\n}\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport const ImageContext = createContext({} as ImageContextInt);\n\nexport const ImageProvider = ({ children }: { children: ReactNode }) => {\n\tconst baseURL = 'https://pixabay.com/api/';\n\n\tconst [imageList, setImageList] = useState<Hit[]>([]);\n\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [totalPages, setTotalPages] = useState(1);\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst prevPage = () => setCurrentPage(currentPage - 1);\n\n\tconst nextPage = () => setCurrentPage(currentPage + 1);\n\n\tconst query = useRef('');\n\n\tconst elementRef = useRef<HTMLFormElement>(null!);\n\n\tconst initElementRef = (element: HTMLFormElement) => {\n\t\telementRef.current = element;\n\t};\n\n\tconst searchImages = useCallback(\n\t\tasync (q: string) => {\n\t\t\ttry {\n\t\t\t\tsetLoading(true);\n\t\t\t\t// Si el término es distinto al de la referencia es una nueva búsqueda y la paginación se reinicia\n\t\t\t\tconst page = q === query.current ? currentPage : 1;\n\t\t\t\tconst resp = await fetch(\n\t\t\t\t\t`${baseURL}?key=${apiKey}&q=${encodeURI(\n\t\t\t\t\t\tq\n\t\t\t\t\t)}&safesearch=true&page=${page}`\n\t\t\t\t);\n\t\t\t\tconst data: SearchImagesResponse = await resp.json();\n\t\t\t\tquery.current = q;\n\t\t\t\tsetTotalPages(~~data.totalHits / 20);\n\t\t\t\tsetImageList(data.hits);\n\t\t\t\tpage === 1 && setCurrentPage(page);\n\t\t\t\telementRef.current?.scrollIntoView({\n\t\t\t\t\tblock: 'end',\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('Error:', err);\n\t\t\t} finally {\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t},\n\t\t[currentPage]\n\t);\n\n\tuseEffect(() => {\n\t\tif (query.current.trim().length < 3) return;\n\t\tsearchImages(query.current);\n\t}, [currentPage, searchImages]);\n\n\treturn (\n\t\t<ImageContext.Provider\n\t\t\tvalue={{\n\t\t\t\timageList,\n\t\t\t\tcurrentPage,\n\t\t\t\ttotalPages,\n\t\t\t\tisLoading,\n\t\t\t\tsearchImages,\n\t\t\t\tinitElementRef,\n\t\t\t\tprevPage,\n\t\t\t\tnextPage,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</ImageContext.Provider>\n\t);\n};\n","import { FormEvent, useContext, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Search } from 'react-feather';\nimport { ImageContext } from '../context/ImageContext';\n\nconst SearchBoxStyled = styled.form`\n\theight: 4rem;\n\tmargin-top: 2.5rem;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmax-width: 60rem;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 3rem 2rem;\n\tinput {\n\t\tbackground-color: #4e5d6c;\n\t\tborder: none;\n\t\tcolor: #ebebeb;\n\t\tfont-family: inherit;\n\t\tfont-size: 1.6rem;\n\t\theight: 100%;\n\t\tpadding: 0 6rem 0 1rem;\n\t\tgrid-row: 1;\n\t\tgrid-column: 1 / -1;\n\t\t&:focus {\n\t\t\toutline: none;\n\t\t}\n\t}\n\tbutton {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tgrid-row: 1;\n\t\tgrid-column: 2;\n\t\ttransition: transform 0.2s ease, opacity 0.2s ease;\n\t\t&:focus {\n\t\t\toutline: none;\n\t\t}\n\t\t&:hover:not(:disabled),\n\t\t&:focus:not(:disabled) {\n\t\t\ttransform: scale(1.1);\n\t\t}\n\t\t&:disabled {\n\t\t\tcursor: not-allowed;\n\t\t\topacity: 0.5;\n\t\t}\n\t}\n`;\n\nfunction SearchBox() {\n\tconst [query, setQuery] = useState('');\n\tconst [prevQuery, setPrevQuery] = useState(query);\n\n\tconst { searchImages, initElementRef } = useContext(ImageContext);\n\n\tconst elementRef = useRef<HTMLFormElement>(null!);\n\n\tconst disableButton = () => query.length < 3;\n\n\tconst handleSearch = (e: FormEvent) => {\n\t\te.preventDefault();\n\t\tif (query.trim().length < 3 || query === prevQuery) return;\n\t\tsearchImages(query);\n\t\tsetPrevQuery(query);\n\t\tsetQuery('');\n\t};\n\n\tuseEffect(() => {\n\t\tinitElementRef(elementRef.current);\n\t}, [initElementRef]);\n\n\treturn (\n\t\t<SearchBoxStyled onSubmit={handleSearch} ref={elementRef}>\n\t\t\t<input\n\t\t\t\taria-label=\"Enter a keyword for search images\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={query}\n\t\t\t\tonChange={({ target }) => setQuery(target.value)}\n\t\t\t/>\n\t\t\t<button type=\"submit\" title=\"Search\" disabled={disableButton()}>\n\t\t\t\t<Search size={24} color=\"#ebebeb\" transform=\"rotate(90)\" />\n\t\t\t</button>\n\t\t</SearchBoxStyled>\n\t);\n}\n\nexport default SearchBox;\n","import styled from 'styled-components';\nimport SearchBox from './SearchBox';\n\nconst HeaderStyled = styled.header`\n\tpadding: 2rem;\n`;\n\nfunction Header() {\n\treturn (\n\t\t<HeaderStyled>\n\t\t\t<h1>Image Search</h1>\n\t\t\t<SearchBox />\n\t\t</HeaderStyled>\n\t);\n}\n\nexport default Header;\n","import { keyframes } from 'styled-components';\n\nexport const pulse = keyframes`\n  0% {\n    background-color: #94A3B8;\n  }\n  50% {\n    background-color: #CBD5E1;\n  }\n  100% {\n    background-color: #94A3B8;\n  }\n`;\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { Hit } from '../interfaces/search-images-response.interface';\nimport { pulse } from '../animations';\n\ninterface ImageCardProps {\n\timage: Hit;\n}\n\nconst ImageCardStyled = styled.div`\n\tcursor: pointer;\n\t.media {\n\t\theight: 16rem;\n\t\toverflow: hidden;\n\t\tposition: relative;\n\t\tspan {\n\t\t\tanimation: ${pulse} 1.5s infinite ease-in-out;\n\t\t\tbox-shadow: 0 9px 33px rgba(0, 0, 0, 0.07);\n\t\t\tdisplay: block;\n\t\t\theight: 100%;\n\t\t\twidth: 100%;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t}\n\t}\n\timg {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tdisplay: block;\n\t\tobject-fit: cover;\n\t\ttransition: transform 0.3s ease-in-out;\n\t}\n\t&:hover img {\n\t\ttransform: scale(1.2);\n\t}\n\t.body {\n\t\tbackground-color: #4e5d6c;\n\t\tpadding: 1.2rem 2rem;\n\t\ttext-align: center;\n\t}\n\t.text {\n\t\tmargin: 1rem;\n\t\t&:last-of-type {\n\t\t\tmargin-bottom: 1.5rem;\n\t\t}\n\t}\n`;\n\nfunction ImageCard({ image }: ImageCardProps) {\n\tconst [isImageLoading, setImageLoading] = useState(true);\n\treturn (\n\t\t<ImageCardStyled>\n\t\t\t<div className=\"media\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={image.previewURL}\n\t\t\t\t\twidth={image.previewWidth}\n\t\t\t\t\theight={image.previewHeight}\n\t\t\t\t\talt={image.tags}\n\t\t\t\t\tonLoad={() => setImageLoading(false)}\n\t\t\t\t/>\n\t\t\t\t{isImageLoading && <span />}\n\t\t\t</div>\n\t\t\t<div className=\"body\">\n\t\t\t\t<p className=\"text\">{image.views} Views</p>\n\t\t\t\t<p className=\"text\">{image.downloads} Downloads</p>\n\t\t\t\t<a\n\t\t\t\t\thref={image.largeImageURL}\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\tclassName=\"btn btn--secondary btn--block\"\n\t\t\t\t>\n\t\t\t\t\tView image\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</ImageCardStyled>\n\t);\n}\n\nexport default ImageCard;\n","import styled from 'styled-components';\nimport { pulse } from '../animations';\n\nconst SkeletonStyled = styled.div`\n\tcursor: pointer;\n\tspan {\n\t\tanimation: ${pulse} 1.5s infinite ease-in-out;\n\t\tbox-shadow: 0 9px 33px rgba(0, 0, 0, 0.07);\n\t\tdisplay: block;\n\t}\n\t.media {\n\t\theight: 16rem;\n\t\toverflow: hidden;\n\t\tspan {\n\t\t\theight: 100%;\n\t\t}\n\t}\n\t.body {\n\t\tbackground-color: #4e5d6c;\n\t\tpadding: 1.2rem 2rem;\n\t\ttext-align: center;\n\t\t> span {\n\t\t\theight: 3.7rem;\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\t.text {\n\t\tmargin: 1rem;\n\t\t&:last-of-type {\n\t\t\tmargin-bottom: 1.5rem;\n\t\t}\n\t\tspan {\n\t\t\theight: 2.1rem;\n\t\t}\n\t}\n`;\n\nfunction Skeleton() {\n\treturn (\n\t\t<SkeletonStyled>\n\t\t\t<div className=\"media\">\n\t\t\t\t<span />\n\t\t\t</div>\n\t\t\t<div className=\"body\">\n\t\t\t\t<p className=\"text\">\n\t\t\t\t\t<span />\n\t\t\t\t</p>\n\t\t\t\t<p className=\"text\">\n\t\t\t\t\t<span />\n\t\t\t\t</p>\n\t\t\t\t<span />\n\t\t\t</div>\n\t\t</SkeletonStyled>\n\t);\n}\n\nexport default Skeleton;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { ImageContext } from '../context/ImageContext';\nimport ImageCard from './ImageCard';\nimport Skeleton from './Skeleton';\n\nconst ImageGridStyled = styled.div`\n\tmargin-top: 4rem;\n\tmargin-bottom: 4rem;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));\n\tgap: 2rem;\n`;\n\nfunction ImageGrid() {\n\tconst { imageList, isLoading } = useContext(ImageContext);\n\n\treturn (\n\t\t<>\n\t\t\t<ImageGridStyled>\n\t\t\t\t{isLoading\n\t\t\t\t\t? [...new Array(20)].map((_, i) => <Skeleton key={i} />)\n\t\t\t\t\t: imageList.map((image) => (\n\t\t\t\t\t\t\t<ImageCard key={image.id} image={image} />\n\t\t\t\t\t  ))}\n\t\t\t</ImageGridStyled>\n\t\t</>\n\t);\n}\n\nexport default ImageGrid;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { ImageContext } from '../context/ImageContext';\n\nconst PaginationStyled = styled.div`\n\tmargin-bottom: 2rem;\n\tpadding: 2rem;\n\ttext-align: center;\n`;\n\nfunction Pagination() {\n\tconst { currentPage, totalPages, prevPage, nextPage } = useContext(\n\t\tImageContext\n\t);\n\n\treturn (\n\t\t<PaginationStyled>\n\t\t\t{currentPage === 1 ? null : (\n\t\t\t\t<button type=\"button\" onClick={prevPage} className=\"btn\">\n\t\t\t\t\tAnterior &laquo;\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{currentPage === totalPages || currentPage > totalPages ? null : (\n\t\t\t\t<button type=\"button\" onClick={nextPage} className=\"btn\">\n\t\t\t\t\tSiguiente &raquo;\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</PaginationStyled>\n\t);\n}\n\nexport default Pagination;\n","import { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst WrapperStyled = styled.div`\n\tmargin: 0 auto;\n\tmax-width: 124rem;\n\tpadding: 0 2rem;\n\twidth: 100%;\n`;\n\nfunction Wrapper({ children }: { children: ReactNode }) {\n\treturn <WrapperStyled>{children}</WrapperStyled>;\n}\n\nexport default Wrapper;\n","import ImageGrid from './ImageGrid';\nimport Pagination from './Pagination';\nimport Wrapper from './Wrapper';\n\nfunction Content() {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<ImageGrid />\n\t\t\t<Pagination />\n\t\t</Wrapper>\n\t);\n}\n\nexport default Content;\n","import { GlobalStyles } from './styles/globalStyles';\nimport Header from './components/Header';\nimport Content from './components/Content';\nimport { ImageProvider } from './context/ImageContext';\n\nfunction App() {\n\treturn (\n\t\t<ImageProvider>\n\t\t\t<GlobalStyles />\n\t\t\t<Header />\n\t\t\t<Content />\n\t\t</ImageProvider>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}